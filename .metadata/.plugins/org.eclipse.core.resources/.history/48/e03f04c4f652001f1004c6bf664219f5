package com.javateam.springJPA.domain;

import jakarta.persistence.Column;
import jakarta.persistence.Entity;
import jakarta.persistence.GeneratedValue;
import jakarta.persistence.GenerationType;
import jakarta.persistence.Id;
import jakarta.persistence.SequenceGenerator;
import jakarta.persistence.Table;

import lombok.Data;
 
// Entity manager가 Entitiy 참고하여 자동완성 수행  
@Entity 
@Table(name="demo_tbl") 
// hibernate 6.2.x 이상에서는 "HTE_"로 시작하는 이름의 임시(temp) 테이블 같이 생성됨 
// https://hibernate.atlassian.net/browse/HHH-17628
// ex) HTE_DEMO_TBL
@SequenceGenerator( 
	     name = "USER_SEQ_GENERATOR",  
	     sequenceName = "USER_SEQ",  // DB sequence(시퀀스) 이름
	     initialValue = 1, 			 // nextval 초기값
	     allocationSize = 1)		 // allocationSize : nextval 증가폭
@Data
public class DemoVO {
 
	// 자동생성이 조금 언급한대로 필드 매겨주는건 좋지만 제대로 잘 안된경우도 있어서 권하진 않음
    @Id		// nullable = not null  
    @Column(nullable=false, precision=4, scale=0) // number(4,0)
    // @GeneratedValue // hibernate_sequence.nextval
    @GeneratedValue(strategy = GenerationType.SEQUENCE, 
    			    generator = "USER_SEQ_GENERATOR")
    private int id;
   
    @Column(nullable=false, length=40)
    private String name;
 
}

/*
 @Entity:

이 클래스가 JPA 엔티티임을 지정합니다. 이 어노테이션이 붙은 클래스는 데이터베이스의 테이블과 매핑됩니다.
@Table(name="demo_tbl"):

이 엔티티가 매핑될 데이터베이스 테이블의 이름을 지정합니다. 여기서는 demo_tbl이라는 이름의 테이블과 매핑됩니다.
@SequenceGenerator:

시퀀스를 생성하는 데 사용되는 설정을 정의합니다. 이 설정은 시퀀스의 이름(USER_SEQ), 초기값(1), 증가폭(1)을 지정합니다.
name: 이 시퀀스 생성기의 이름을 지정합니다.
sequenceName: 데이터베이스에서 사용할 시퀀스의 이름을 지정합니다.
initialValue: 시퀀스의 초기값을 설정합니다.
allocationSize: 시퀀스 값의 증가폭을 설정합니다.
@Id:

이 필드가 엔티티의 기본 키임을 지정합니다.
@Column:

필드가 데이터베이스 테이블의 열과 매핑됨을 나타냅니다.
nullable=false: 이 열이 NOT NULL이어야 함을 지정합니다.
precision=4: 숫자의 전체 자릿수를 지정합니다. 이 경우, 숫자가 4자리를 초과할 수 없습니다.
scale=0: 소수점 이하 자릿수를 지정합니다. 이 경우 소수점 이하 자릿수는 없습니다.
length=40: 문자열의 최대 길이를 지정합니다.
@GeneratedValue(strategy = GenerationType.SEQUENCE, generator = "USER_SEQ_GENERATOR"):

이 필드의 값을 자동으로 생성하도록 설정합니다. GenerationType.SEQUENCE는 시퀀스를 사용하여 값을 생성하며, 위에서 정의한 시퀀스 생성기(USER_SEQ_GENERATOR)를 사용합니다.
@Data (Lombok):

이 어노테이션은 Lombok 라이브러리에서 제공하며, getter, setter, toString, equals, hashCode 메서드를 자동으로 생성합니다.
  
  요약
  이 클래스는 JPA 엔티티 DemoVO를 정의하며, demo_tbl 테이블에 매핑됩니다. id 필드는 자동으로 생성되는 기본 키이며, name 필드는 40 자 길이의 문자열을 저장하는 열입니다. 
  @SequenceGenerator를 사용하여 USER_SEQ 시퀀스를 통해 id 값을 자동으로 생성합니다.
  */
  